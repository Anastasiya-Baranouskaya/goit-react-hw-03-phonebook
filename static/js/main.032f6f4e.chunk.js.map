{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","ContactListItem","this","props","name","number","id","onDeleteContact","listItem","span","button","type","onClick","Component","ContactList","list","map","ContactForm","state","handleChange","e","currentTarget","value","setState","uuidv4","handleSubmit","preventDefault","onSubmit","reset","nameId","telId","form","htmlFor","label","input","pattern","required","onChange","Filter","div","App","contacts","filter","formSubmitHandler","item","normalizedName","toLowerCase","find","el","alert","changeContacts","prevState","changeFilter","target","getFilteredContacts","normalizedFilter","contact","includes","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.032f6f4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Puy-\",\"listItem\":\"ContactList_listItem__up778\",\"span\":\"ContactList_span__h2vQ7\",\"button\":\"ContactList_button__KzkFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3rzx2\",\"label\":\"ContactForm_label__1feVm\",\"input\":\"ContactForm_input__33nPN\",\"button\":\"ContactForm_button__-DeMT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Filter_div__3Z_NU\",\"label\":\"Filter_label__2vtxv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3abcS\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nexport class ContactListItem extends Component {\r\n  render() {\r\n    const { name, number, id, onDeleteContact } = this.props;\r\n    return (\r\n      <li className={s.listItem}>\r\n        <span className={s.span}>{name}:</span>\r\n        <span className={s.span}>{number}:</span>\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          id={id}\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ContactListItem } from './ContactListItem';\r\n\r\nimport s from './ContactList.module.css';\r\nexport class ContactList extends Component {\r\n  render() {\r\n    const { list, onDeleteContact } = this.props;\r\n    return (\r\n      <ul className={s.list}>\r\n        {list.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nContactList.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n      id: uuidv4(),\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    const nameId = uuidv4();\r\n    const telId = uuidv4();\r\n    const { handleSubmit, handleChange } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label htmlFor={nameId} className={s.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          id={nameId}\r\n        />\r\n        <br />\r\n        <label htmlFor={telId} className={s.label}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          id={telId}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Filter.module.css';\r\nexport class Filter extends Component {\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n    return (\r\n      <div className={s.div}>\r\n        <label htmlFor={uuidv4()} className={s.label}>\r\n          Find contacts by name:\r\n        </label>\r\n        <input type=\"text\" value={value} id={uuidv4()} onChange={onChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Section } from \"./components/Section/Section\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { Filter } from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = (item) => {\n    const { contacts } = this.state;\n    const normalizedName = item.name.toLowerCase();\n    contacts.find((el) => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is already in contacts`)\n      : this.changeContacts(item);\n  };\n\n  changeContacts = (item) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, item],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((el) => el.id !== id),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    const { formSubmitHandler, changeFilter } = this;\n    const { filter } = this.state;\n    return (\n      <div className=\"App\">\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={formSubmitHandler} />\n          <h1>Contacts</h1>\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList\n            list={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}